NETWORK SECURITY CSE 508, HW3
Aditya Tomer 
111491409


Test environment
cmd: lsb_release -a
Distributor ID:    Ubuntu
Description:    Ubuntu 16.04.3 LTS
Release:    16.04
Codename:    xenial


cmd: uname -srm
Linux 4.10.0-38-generic x86_64


Compiler version
gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609


Running Commands
Server:
Building=> gcc -o pbproxy 3fcntl.c -lcrypto
Running=> ./pbproxy -l 1234 -k mykeyfile localhost 22


Client:
        ssh -o "ProxyCommand ./pbproxy -k mykeyfile localhost 1234" localhost


Arguments:
 -l  Reverse proxy mode: Listening for clients to connect on open <port> and relaying
     them to <destination hostname:port>
 -k  symmetric key file


Implementation


Encryption and Decryption :
1. Client and Server uses the shared for encryption and decryption. 
2. AES in control mode ctr_128 is used.
3. Initialization vector (iv) is randomly generated by RAND_bytes function, iv is sent in the encrypted message where first 8 bytes is the iv. Message is decrypted by server by finding the first 8 bytes of the message as iv and the symmetric key provided during runtime.
4. Similarly pbproxy sent the iv in the encrypted message to the client, the client extracts the encrypted message and iv and decrypts using the key.


Client:
The client connects to the open port of the pbproxy using the hostname and the open port provided using command line. The client sends data by stdin. The data is encrypted in Aes ctrl mode using random iv and symmetic key. Non blocking socket connection is used for reading and writing data simultaneously. Similarly encrypted data is sent, iv is extracted from it and decrypted and data is output on STDOUT.


Server:
In server, the program created 2 sockets. One for pbproxy and the other for connection with ssh. Pbproxy first binds and listen on the openport for connection with clients. Sequential connection of clients is supported by the program. As soon as the client connects. Encrypted data is sent from the client, pbproxy reads the cypher text from the buffer. Extracts first 8 bytes from the text as iv. Decrypts the text using iv and symmetric key. The decrypted data is now ready to be sent to ssh socket. Similarly whenever it receives the data from the ssh port, pbproxy encrypt the message and sent the data to the client.






References:
https://stackoverflow.com/questions/3141860/aes-ctr-256-encryption-mode-of-operation-on-openssl